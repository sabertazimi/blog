name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 1
      - name: Setup Node environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
          architecture: x64
          registry-url: https://registry.npmjs.org/
          cache: 'yarn'
      - name: Install dependencies
        run: |
          yarn
      - name: Run linter tests
        run: |
          yarn lint

  test:
    name: Testing
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16]
        architecture: [x64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 1
      - name: Setup Node environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          architecture: ${{ matrix.architecture }}
          registry-url: https://registry.npmjs.org/
          cache: 'yarn'
      - name: Install dependencies
        run: |
          yarn
      - name: Run unit tests
        run: |
          yarn test:all
      - name: Perform code coverage report action
        uses: codecov/codecov-action@v3
        if: ${{ matrix.node-version == 16 && matrix.os == 'ubuntu-latest' && matrix.architecture == 'x64' }}

  build:
    name: Building
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16]
        architecture: [x64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0 # Keep `0` for git time
      - name: Setup Node environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          architecture: ${{ matrix.architecture }}
          registry-url: https://registry.npmjs.org/
          cache: 'yarn'
      - name: Install dependencies
        run: |
          yarn
      - name: Build application
        run: |
          yarn build
          # Skip vercel build for `gh-pages`
          cp -fr .vercel .next/
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        if: ${{ matrix.node-version == 16 && matrix.os == 'ubuntu-latest' && matrix.architecture == 'x64' }}
        with:
          name: app
          path: .next
